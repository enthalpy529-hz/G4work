Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /home/medphys/geant4.10.07.p03-install/share/Geant4-10.7.4/examples/extended/medical/dna/chem6/build/CMakeFiles/CMakeScratch/TryCompile-1BLYFY

Run Build Command(s):/usr/bin/make -f Makefile cmTC_6b5ec/fast && /usr/bin/make  -f CMakeFiles/cmTC_6b5ec.dir/build.make CMakeFiles/cmTC_6b5ec.dir/build
make[1]: Entering directory '/home/medphys/geant4.10.07.p03-install/share/Geant4-10.7.4/examples/extended/medical/dna/chem6/build/CMakeFiles/CMakeScratch/TryCompile-1BLYFY'
Building C object CMakeFiles/cmTC_6b5ec.dir/src.c.o
/usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD   -o CMakeFiles/cmTC_6b5ec.dir/src.c.o -c /home/medphys/geant4.10.07.p03-install/share/Geant4-10.7.4/examples/extended/medical/dna/chem6/build/CMakeFiles/CMakeScratch/TryCompile-1BLYFY/src.c
Linking C executable cmTC_6b5ec
/home/medphys/program/cmake-3.25.2/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6b5ec.dir/link.txt --verbose=1
/usr/bin/cc CMakeFiles/cmTC_6b5ec.dir/src.c.o -o cmTC_6b5ec 
/usr/bin/ld: CMakeFiles/cmTC_6b5ec.dir/src.c.o: in function `main':
src.c:(.text+0x46): undefined reference to `pthread_create'
/usr/bin/ld: src.c:(.text+0x52): undefined reference to `pthread_detach'
/usr/bin/ld: src.c:(.text+0x5e): undefined reference to `pthread_cancel'
/usr/bin/ld: src.c:(.text+0x6f): undefined reference to `pthread_join'
collect2: error: ld returned 1 exit status
make[1]: *** [CMakeFiles/cmTC_6b5ec.dir/build.make:99: cmTC_6b5ec] Error 1
make[1]: Leaving directory '/home/medphys/geant4.10.07.p03-install/share/Geant4-10.7.4/examples/extended/medical/dna/chem6/build/CMakeFiles/CMakeScratch/TryCompile-1BLYFY'
make: *** [Makefile:127: cmTC_6b5ec/fast] Error 2


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}


